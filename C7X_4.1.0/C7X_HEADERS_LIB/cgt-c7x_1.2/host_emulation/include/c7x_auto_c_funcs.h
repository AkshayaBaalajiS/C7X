/*****************************************************************************/
/*  C7X_AUTO_C_FUNCS.H v#####                                                */
/*                                                                           */
/* Copyright (c) 2017 Texas Instruments Incorporated                         */
/* http://www.ti.com/                                                        */
/*                                                                           */
/*  Redistribution and  use in source  and binary forms, with  or without    */
/*  modification,  are permitted provided  that the  following conditions    */
/*  are met:                                                                 */
/*                                                                           */
/*     Redistributions  of source  code must  retain the  above copyright    */
/*     notice, this list of conditions and the following disclaimer.         */
/*                                                                           */
/*     Redistributions in binary form  must reproduce the above copyright    */
/*     notice, this  list of conditions  and the following  disclaimer in    */
/*     the  documentation  and/or   other  materials  provided  with  the    */
/*     distribution.                                                         */
/*                                                                           */
/*     Neither the  name of Texas Instruments Incorporated  nor the names    */
/*     of its  contributors may  be used to  endorse or  promote products    */
/*     derived  from   this  software  without   specific  prior  written    */
/*     permission.                                                           */
/*                                                                           */
/*  THIS SOFTWARE  IS PROVIDED BY THE COPYRIGHT  HOLDERS AND CONTRIBUTORS    */
/*  "AS IS"  AND ANY  EXPRESS OR IMPLIED  WARRANTIES, INCLUDING,  BUT NOT    */
/*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR    */
/*  A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT    */
/*  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    */
/*  SPECIAL,  EXEMPLARY,  OR CONSEQUENTIAL  DAMAGES  (INCLUDING, BUT  NOT    */
/*  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,    */
/*  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY    */
/*  THEORY OF  LIABILITY, WHETHER IN CONTRACT, STRICT  LIABILITY, OR TORT    */
/*  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE    */
/*  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.     */
/*                                                                           */
/*****************************************************************************/
// This file has been auto generated  from ISA DB on Mon Mar  6 22:05:14 2017

void _vabsb_vv (vreg_t src1, vreg_t &dst_result);
void _vabsd_vv (vreg_t src1, vreg_t &dst_result);
void _vabsh_vv (vreg_t src1, vreg_t &dst_result);
void _vabsw_vv (vreg_t src1, vreg_t &dst_result);
void _vabsdp_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vabssp_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _addkpc_bkd (int64_t src1, int32_t src2, int64_t &dst_result);
void _vaddb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vaddb_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _addd_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _vaddd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _addd_dkd (int64_t src1, int32_t src2, int64_t &dst_result);
void _vaddd_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vaddh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vaddh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _addw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vaddw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _addw_rkr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vaddw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _adddp_ddd (int64_t src1, int64_t src2, int64_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vadddp_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _addsp_rrr (int32_t src1, int32_t src2, int64_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vaddsp_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _andw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _andd_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _vandw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _andnw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _andnd_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _vandnw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _andnd_dkd (int64_t src1, int32_t src2, int64_t &dst_result);
void _andnw_rkr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vandnw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _andn_ppp (vpred_t src1, vpred_t src2, vpred_t &dst_result);
void _andd_dkd (int64_t src1, int32_t src2, int64_t &dst_result);
void _andw_rkr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vandw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _and_ppp (vpred_t src1, vpred_t src2, vpred_t &dst_result);
void _vapysb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vapysd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vapysh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vapysw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vavgb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vavgd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vavgh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vavgnrb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vavgnrd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vavgnrh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vavgnrub_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vavgnrud_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vavgnruh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vavgnruw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vavgnrw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vavgub_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vavgud_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vavguh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vavguw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vavgw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vbinlogw_vv (vreg_t src1, vreg_t &dst_result);
void _vbitcntb_vv (vreg_t src1, vreg_t &dst_result);
void _pbitcntb_pr (vpred_t src1, int64_t &dst_result);
void _vbitcntd_vv (vreg_t src1, vreg_t &dst_result);
void _pbitcntd_pr (vpred_t src1, int64_t &dst_result);
void _vbitcnth_vv (vreg_t src1, vreg_t &dst_result);
void _pbitcnth_pr (vpred_t src1, int64_t &dst_result);
void _vbitcntw_vv (vreg_t src1, vreg_t &dst_result);
void _pbitcntw_pr (vpred_t src1, int64_t &dst_result);
void _vbitdeald_vv (vreg_t src1, vreg_t &dst_result);
void _vbitdealw_vv (vreg_t src1, vreg_t &dst_result);
void _vbitrd_vv (vreg_t src1, vreg_t &dst_result);
void _vbitrw_vv (vreg_t src1, vreg_t &dst_result);
void _bitr_pp (vpred_t src1, vpred_t &dst_result);
void _vbitshfld_vv (vreg_t src1, vreg_t &dst_result);
void _vbitshflw_vv (vreg_t src1, vreg_t &dst_result);
void _vbittran8b_vv (vreg_t src1, vreg_t &dst_result);
void _bitpack_dkp (int64_t src1, int32_t src2, vpred_t &dst_result);
void _bitpack_pkp (vpred_t src1, int32_t src2, vpred_t &dst_result);
void _bitxpnd_dkp (int64_t src1, int32_t src2, vpred_t &dst_result);
void _bitxpnd_pkp (vpred_t src1, int32_t src2, vpred_t &dst_result);
void _vccdotp2hw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vccmatmpyhw_vww (vreg_t src1, wreg_t src2, wreg_t &dst_result, fp_excep_t &fsr);
void _vccmatmpyr1hh_vwv (vreg_t src1, wreg_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vccmpyhw_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result, fp_excep_t &fsr);
void _vccmpyr1hh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vccmpyr1ww_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vcdotp2hw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vclassdp_vv (vreg_t src1, vreg_t &dst_result);
void _vclasssp_vv (vreg_t src1, vreg_t &dst_result);
void _clr_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vcmatmpyhw_vww (vreg_t src1, wreg_t src2, wreg_t &dst_result, fp_excep_t &fsr);
void _vcmatmpyr1hh_vwv (vreg_t src1, wreg_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vcmaxpb_vvp (vreg_t src1, vreg_t &src2, vpred_t &dst_result);
void _vcmaxph_vvp (vreg_t src1, vreg_t &src2, vpred_t &dst_result);
void _vcmaxb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vcmaxh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _c6dcmpeqb_ddr (int64_t src1, int64_t src2, int64_t &dst_result);
void _vcmpeqb_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpeqd_ddr (int64_t src1, int64_t src2, int64_t &dst_result);
void _vcmpeqd_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpeqd_dkr (int64_t src1, int32_t src2, int64_t &dst_result);
void _vcmpeqd_vkp (vreg_t src1, int32_t src2, vpred_t &dst_result);
void _c6dcmpeqh_ddr (int64_t src1, int64_t src2, int64_t &dst_result);
void _vcmpeqh_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpeqw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vcmpeqw_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpeqw_rkr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vcmpeqw_vkp (vreg_t src1, int32_t src2, vpred_t &dst_result);
void _cmpeqdp_ddr (int64_t src1, int64_t src2, int64_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vcmpeqdp_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _cmpeqsp_rrr (int32_t src1, int32_t src2, int64_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vcmpeqsp_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vcmpgeub_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpgeud_ddr (int64_t src1, int64_t src2, int64_t &dst_result);
void _vcmpgeud_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpgeud_dkr (int64_t src1, int32_t src2, int64_t &dst_result);
void _vcmpgeud_vkp (vreg_t src1, int32_t src2, vpred_t &dst_result);
void _vcmpgeuh_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpgeuw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vcmpgeuw_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpgeuw_rkr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vcmpgeuw_vkp (vreg_t src1, int32_t src2, vpred_t &dst_result);
void _vcmpgeb_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpged_ddr (int64_t src1, int64_t src2, int64_t &dst_result);
void _vcmpged_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpged_dkr (int64_t src1, int32_t src2, int64_t &dst_result);
void _vcmpged_vkp (vreg_t src1, int32_t src2, vpred_t &dst_result);
void _vcmpgeh_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpgew_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vcmpgew_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpgew_rkr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vcmpgew_vkp (vreg_t src1, int32_t src2, vpred_t &dst_result);
void _c6dcmpgtub_ddr (int64_t src1, int64_t src2, int64_t &dst_result);
void _vcmpgtub_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpgtud_ddr (int64_t src1, int64_t src2, int64_t &dst_result);
void _vcmpgtud_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpgtud_dkr (int64_t src1, int32_t src2, int64_t &dst_result);
void _vcmpgtud_vkp (vreg_t src1, int32_t src2, vpred_t &dst_result);
void _vcmpgtuh_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpgtuw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vcmpgtuw_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpgtuw_rkr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vcmpgtuw_vkp (vreg_t src1, int32_t src2, vpred_t &dst_result);
void _vcmpgtb_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpgtd_ddr (int64_t src1, int64_t src2, int64_t &dst_result);
void _vcmpgtd_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpgtd_dkr (int64_t src1, int32_t src2, int64_t &dst_result);
void _vcmpgtd_vkp (vreg_t src1, int32_t src2, vpred_t &dst_result);
void _c6dcmpgth_ddr (int64_t src1, int64_t src2, int64_t &dst_result);
void _vcmpgth_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpgtw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vcmpgtw_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result);
void _cmpgtw_rkr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vcmpgtw_vkp (vreg_t src1, int32_t src2, vpred_t &dst_result);
void _cmpledp_ddr (int64_t src1, int64_t src2, int64_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vcmpledp_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _cmplesp_rrr (int32_t src1, int32_t src2, int64_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vcmplesp_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _cmpltdp_ddr (int64_t src1, int64_t src2, int64_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vcmpltdp_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _cmpltsp_rrr (int32_t src1, int32_t src2, int64_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vcmpltsp_vvp (vreg_t src1, vreg_t src2, vpred_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vcmpyhw_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result, fp_excep_t &fsr);
void _vcmpyr1hh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vcmpyr1ww_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vcmpyrhh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vcmpysp_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _compressl_pp (vpred_t src1, vpred_t &dst_result);
void _compressr_pp (vpred_t src1, vpred_t &dst_result);
void _vcrot270sp_vv (vreg_t src1, vreg_t &dst_result);
void _vcrot270h_vv (vreg_t src1, vreg_t &dst_result);
void _vcrot270w_vv (vreg_t src1, vreg_t &dst_result);
void _vcrot90sp_vv (vreg_t src1, vreg_t &dst_result);
void _vcrot90h_vv (vreg_t src1, vreg_t &dst_result);
void _vcrot90w_vv (vreg_t src1, vreg_t &dst_result);
void _c6ddotp2hhw_drd (int64_t src1, int32_t src2, int64_t &dst_result, fp_excep_t &fsr);
void _c6ddotp2hrhh_drr (int64_t src1, int32_t src2, int64_t &dst_result, fp_excep_t &fsr);
void _c6ddotp2lhw_drd (int64_t src1, int32_t src2, int64_t &dst_result, fp_excep_t &fsr);
void _c6ddotp2lrhh_drr (int64_t src1, int32_t src2, int64_t &dst_result, fp_excep_t &fsr);
void _deal2b_pp (vpred_t src1, vpred_t &dst_result);
void _decimateb_ppp (vpred_t src1, vpred_t src2, vpred_t &dst_result);
void _decimated_ppp (vpred_t src1, vpred_t src2, vpred_t &dst_result);
void _decimateh_ppp (vpred_t src1, vpred_t src2, vpred_t &dst_result);
void _decimatew_ppp (vpred_t src1, vpred_t src2, vpred_t &dst_result);
void _vhpint_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vhpsp_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _c6dmpyhw_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _c6dmpysubh_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _c6dmpyubh_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _c6dmpyuhw_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _vdotp2hd_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _vdotp2hw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vdotp2nwd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vdotp2nxwd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _c6dotp2rsuhw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vdotp2subh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vdotp2suhd_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _vdotp2suhw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vdotp2ubh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vdotp2uhd_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _vdotp2uhw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vdotp2wd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vdotp2xwd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vdotp4hd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vdotp4hw_wwv (wreg_t src1, wreg_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vdotp4subw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vdotp4suhd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vdotp4suhw_wwv (wreg_t src1, wreg_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vdotp4ubw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vdotp4uhd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vdotp8subw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _c6dotpn2hw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _c6dotpn2rsuhh_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vdpint_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vdpsp_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vdptrunc_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _c6dsmpyhw_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _c6dspacku4_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _extuv_vkkkd (vreg_t src1, int32_t src2, int32_t src3, int32_t src4, int64_t &dst_result);
void _extu_dkkd (int64_t src1, int32_t src2, int32_t src3, int64_t &dst_result);
void _extv_vkkkd (vreg_t src1, int32_t src2, int32_t src3, int32_t src4, int64_t &dst_result);
void _ext_dkkd (int64_t src1, int32_t src2, int32_t src3, int64_t &dst_result);
void _getbit_rkr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vgmpyb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, uint64_t gfpgfr_val);
void _vgmpyw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, uint64_t gply_val);
void _vgsatd_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vgsath_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vgsatsud_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vgsatsuh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vgsatsuw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vgsatud_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vgsatuh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vgsatuw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vgsatw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vhadd64b1d_vd (vreg_t src1, int64_t &dst_result);
void _vhadd8d1d_vd (vreg_t src1, int64_t &dst_result);
void _vhadd32h1d_vd (vreg_t src1, int64_t &dst_result);
void _vhaddu64b1d_vd (vreg_t src1, int64_t &dst_result);
void _vhaddu8d1d_vd (vreg_t src1, int64_t &dst_result);
void _vhaddu32h1d_vd (vreg_t src1, int64_t &dst_result);
void _vhaddu16w1d_vd (vreg_t src1, int64_t &dst_result);
void _vhadd16w1d_vd (vreg_t src1, int64_t &dst_result);
void _vhp16q15_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vhxor64b1b_vr (vreg_t src1, int64_t &dst_result);
void _vhxor8d1d_vd (vreg_t src1, int64_t &dst_result);
void _vhxor32h1h_vr (vreg_t src1, int64_t &dst_result);
void _vhxor16w1w_vr (vreg_t src1, int64_t &dst_result);
void _vintdpuh_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vintdpul_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vintdph_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vintdpl_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vinthp_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vinthsph_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vinthspl_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vinthspuh_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vinthspul_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vintsp_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vintspu_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _landnd_ddr (int64_t src1, int64_t src2, int64_t &dst_result);
void _landd_ddr (int64_t src1, int64_t src2, int64_t &dst_result);
void _vlmbd0b_vv (vreg_t src1, vreg_t &dst_result);
void _vlmbd0d_vv (vreg_t src1, vreg_t &dst_result);
void _vlmbd0h_vv (vreg_t src1, vreg_t &dst_result);
void _vlmbd0w_vv (vreg_t src1, vreg_t &dst_result);
void _vlmbd1b_vv (vreg_t src1, vreg_t &dst_result);
void _vlmbd1d_vv (vreg_t src1, vreg_t &dst_result);
void _vlmbd1h_vv (vreg_t src1, vreg_t &dst_result);
void _vlmbd1w_vv (vreg_t src1, vreg_t &dst_result);
void _vlmbdb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vlmbdd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vlmbdh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vlmbdw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _lord_ddr (int64_t src1, int64_t src2, int64_t &dst_result);
void _vmatmpysp_vww (vreg_t src1, wreg_t src2, wreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vmaxpb_vvp (vreg_t src1, vreg_t &src2, vpred_t &dst_result);
void _vmaxpd_vvp (vreg_t src1, vreg_t &src2, vpred_t &dst_result);
void _vmaxph_vvp (vreg_t src1, vreg_t &src2, vpred_t &dst_result);
void _vmaxpw_vvp (vreg_t src1, vreg_t &src2, vpred_t &dst_result);
void _vmaxupb_vvp (vreg_t src1, vreg_t &src2, vpred_t &dst_result);
void _vmaxupd_vvp (vreg_t src1, vreg_t &src2, vpred_t &dst_result);
void _vmaxuph_vvp (vreg_t src1, vreg_t &src2, vpred_t &dst_result);
void _vmaxupw_vvp (vreg_t src1, vreg_t &src2, vpred_t &dst_result);
void _vmaxub_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vmaxud_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vmaxuh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vmaxuw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vmaxb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vmaxd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vmaxh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vmaxw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vmaxdp_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vmaxsp_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vminpb_vvp (vreg_t src1, vreg_t &src2, vpred_t &dst_result);
void _vminpd_vvp (vreg_t src1, vreg_t &src2, vpred_t &dst_result);
void _vminph_vvp (vreg_t src1, vreg_t &src2, vpred_t &dst_result);
void _vminpw_vvp (vreg_t src1, vreg_t &src2, vpred_t &dst_result);
void _vminupb_vvp (vreg_t src1, vreg_t &src2, vpred_t &dst_result);
void _vminupd_vvp (vreg_t src1, vreg_t &src2, vpred_t &dst_result);
void _vminuph_vvp (vreg_t src1, vreg_t &src2, vpred_t &dst_result);
void _vminupw_vvp (vreg_t src1, vreg_t &src2, vpred_t &dst_result);
void _vminub_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vminud_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vminuh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vminuw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vminb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vmind_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vminh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vminw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vmindp_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vminsp_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _c6mpy2ir_rrd (int32_t src1, int32_t src2, int64_t &dst_result, fp_excep_t &fsr);
void _vmpybb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _mpydd_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _vmpydd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _mpydp_ddd (int64_t src1, int64_t src2, int64_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vmpydp_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vmpyhh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _c6mpyhir_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _mpyhw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vmpyhw_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _c6mpylir_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _mpysp_rrr (int32_t src1, int32_t src2, int64_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vmpysp_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vmpysp2dp_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vmpysubh_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _vmpysudd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _mpysuhw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vmpysuhw_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _vmpysuwd_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _vmpyubh_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _vmpyudd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vmpyudq_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _mpyuhw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vmpyuhw_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _vmpyuwd_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _vmpywd_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _mpyww_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vmpyww_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _mv_dd (int64_t src1, int64_t &dst_result);
void _vmv_vv (vreg_t src1, vreg_t &dst_result);
void _mvc_vy (vreg_t src1, vreg_t &dst_result);
void _mvc_yv (vreg_t src1, vreg_t &dst_result);
void _mvc_yy (vreg_t src1, vreg_t &dst_result);
void _mvdly2_dd (int64_t src1, int64_t &dst_result);
void _vmvdly2_vv (vreg_t src1, vreg_t &dst_result);
void _mvdly3_dd (int64_t src1, int64_t &dst_result);
void _vmvdly3_vv (vreg_t src1, vreg_t &dst_result);
void _mvdly4_dd (int64_t src1, int64_t &dst_result);
void _vmvdly4_vv (vreg_t src1, vreg_t &dst_result);
void _mvk32_kd (int64_t src1, int64_t &dst_result);
void _vmvk32_kv (int32_t src1, vreg_t &dst_result);
void _mvk64_kd (int64_t src1, int64_t &dst_result);
void _vmvk64_kv (int64_t src1, vreg_t &dst_result);
void _mvku32_kd (int64_t src1, int64_t &dst_result);
void _mvpb_pd (vpred_t src1, int64_t &dst_result);
void _mvpd_pd (vpred_t src1, int64_t &dst_result);
void _mvph_pd (vpred_t src1, int64_t &dst_result);
void _mvpw_pd (vpred_t src1, int64_t &dst_result);
void _mv_pp (vpred_t src1, vpred_t &dst_result);
void _mv_dp (int64_t src1, vpred_t &dst_result);
void _nandw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _nandd_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _vnandw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _nandd_dkd (int64_t src1, int32_t src2, int64_t &dst_result);
void _nand_ppp (vpred_t src1, vpred_t src2, vpred_t &dst_result);
void _negd_dd (int64_t src1, int64_t &dst_result);
void _negw_rr (int32_t src1, int64_t &dst_result);
void _norw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _nord_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _vnorw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vnorm2uh_vv (vreg_t src1, vreg_t &dst_result);
void _vnorm2uw_vv (vreg_t src1, vreg_t &dst_result);
void _vnormb_vv (vreg_t src1, vreg_t &dst_result);
void _vnormd_vv (vreg_t src1, vreg_t &dst_result);
void _vnormh_vv (vreg_t src1, vreg_t &dst_result);
void _vnormw_vv (vreg_t src1, vreg_t &dst_result);
void _nord_dkd (int64_t src1, int32_t src2, int64_t &dst_result);
void _nor_ppp (vpred_t src1, vpred_t src2, vpred_t &dst_result);
void _not_rr (int32_t src1, int64_t &dst_result);
void _vnot_vv (vreg_t src1, vreg_t &dst_result);
void _not_pp (vpred_t src1, vpred_t &dst_result);
void _vopmatmpysp_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _orw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _ord_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _vorw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _ornw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _ornd_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _vornw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _ornd_dkd (int64_t src1, int32_t src2, int64_t &dst_result);
void _ornw_rkr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vornw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _orn_ppp (vpred_t src1, vpred_t src2, vpred_t &dst_result);
void _ord_dkd (int64_t src1, int32_t src2, int64_t &dst_result);
void _orw_rkr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vorw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _or_ppp (vpred_t src1, vpred_t src2, vpred_t &dst_result);
void _dpackh2_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _vpackh2_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _dpackh4_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _vpackh4_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _dpackhl2_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _vpackhl2_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _dpackl2_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _vpackl2_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _dpackl4_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _vpackl4_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _dpacklh2_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _vpacklh2_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _packlh4_rrd (int32_t src1, int32_t src2, int64_t &dst_result);
void _vpacklh4_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _packp2_rrd (int32_t src1, int32_t src2, int64_t &dst_result);
void _vpackp2_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _packw_rrd (int32_t src1, int32_t src2, int64_t &dst_result);
void _vpackw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _packwdly4_rrd (int32_t src1, int32_t src2, int64_t &dst_result);
void _packx2_rrd (int32_t src1, int32_t src2, int64_t &dst_result);
void _vpackx2_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _pcntgather_prp (vpred_t src1, int64_t &src2, vpred_t &dst_result);
void _pcntgatherb_prp (vpred_t src1, int64_t &src2, vpred_t &dst_result);
void _pcntgatherd_prp (vpred_t src1, int64_t &src2, vpred_t &dst_result);
void _pcntgatherh_prp (vpred_t src1, int64_t &src2, vpred_t &dst_result);
void _pcntgatherw_prp (vpred_t src1, int64_t &src2, vpred_t &dst_result);
void _pdup2b_pp (vpred_t src1, vpred_t &dst_result);
void _pdup2d_pp (vpred_t src1, vpred_t &dst_result);
void _pdup2h_pp (vpred_t src1, vpred_t &dst_result);
void _pdup2w_pp (vpred_t src1, vpred_t &dst_result);
void _pduph2b_pp (vpred_t src1, vpred_t &dst_result);
void _pduph2d_pp (vpred_t src1, vpred_t &dst_result);
void _pduph2h_pp (vpred_t src1, vpred_t &dst_result);
void _pduph2w_pp (vpred_t src1, vpred_t &dst_result);
void _pdupl2b_pp (vpred_t src1, vpred_t &dst_result);
void _pdupl2d_pp (vpred_t src1, vpred_t &dst_result);
void _pdupl2h_pp (vpred_t src1, vpred_t &dst_result);
void _pdupl2w_pp (vpred_t src1, vpred_t &dst_result);
void _maskb_rp (int32_t src1, vpred_t &dst_result);
void _maskb_kp (int32_t src1, vpred_t &dst_result);
void _maskb_zp (vpred_t src1, vpred_t &dst_result);
void _maskd_rp (int32_t src1, vpred_t &dst_result);
void _maskd_kp (int32_t src1, vpred_t &dst_result);
void _maskd_zp (vpred_t src1, vpred_t &dst_result);
void _maskh_rp (int32_t src1, vpred_t &dst_result);
void _maskh_kp (int32_t src1, vpred_t &dst_result);
void _maskh_zp (vpred_t src1, vpred_t &dst_result);
void _maskw_rp (int32_t src1, vpred_t &dst_result);
void _maskw_kp (int32_t src1, vpred_t &dst_result);
void _maskw_zp (vpred_t src1, vpred_t &dst_result);
void _vrcpdp_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vrcpsp_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _replace_dkkd (int64_t src1, int32_t src2, int32_t src3, int64_t &src4);
void _vreplace_vkkv (vreg_t src1, int32_t src2, int32_t src3, vreg_t &src4);
void _replacev_dkkkv (int64_t src1, int32_t cst0, int32_t cst1, int32_t cst2, vreg_t &src5);
void _prmbdb_pr (vpred_t src1, int64_t &dst_result);
void _prmbdd_pr (vpred_t src1, int64_t &dst_result);
void _prmbdh_pr (vpred_t src1, int64_t &dst_result);
void _prmbdw_pr (vpred_t src1, int64_t &dst_result);
void _vrotlb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vrotlb_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vrotld_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vrotld_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vrotlh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vrotlh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vrotlw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vrotlw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vrpackh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vrsqrdp_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vrsqrsp_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vsaddusb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsaddush_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsaddusw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsaddub_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsadduh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsadduw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsaddb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsaddb_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsaddh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsaddh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsaddw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vsaddw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vsatdl_vv (vreg_t src1, vreg_t &dst_result);
void _vsatdw_vv (vreg_t src1, vreg_t &dst_result);
void _vsathb_vv (vreg_t src1, vreg_t &dst_result);
void _vsatlw_vv (vreg_t src1, vreg_t &dst_result, fp_excep_t &fsr);
void _vsatwh_vv (vreg_t src1, vreg_t &dst_result);
void _vscaledp_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vscalesp_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _set_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _shfl2b_pp (vpred_t src1, vpred_t &dst_result);
void _vshfl3_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshlmb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshlb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshlb_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _shld_drd (int64_t src1, int32_t src2, int64_t &dst_result);
void _vshld_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _shld_dkd (int64_t src1, int32_t src2, int64_t &dst_result);
void _vshld_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshlh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshlh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _shlw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vshlw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _shlw_rkr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vshlw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshrmb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshrrb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshrrb_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshrrd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshrrd_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshrrh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshrrh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshrrw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshrrw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshrurb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshrurb_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshrurd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshrurd_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshrurh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshrurh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshrurw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshrurw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshrub_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshrub_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _shrud_drd (int64_t src1, int32_t src2, int64_t &dst_result);
void _vshrud_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _shrud_dkd (int64_t src1, int32_t src2, int64_t &dst_result);
void _vshrud_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshruh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshruh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _shruw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vshruw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _shruw_rkr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vshruw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshrb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshrb_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _shrd_drd (int64_t src1, int32_t src2, int64_t &dst_result);
void _vshrd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _shrd_dkd (int64_t src1, int32_t src2, int64_t &dst_result);
void _vshrd_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshrh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshrh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _shrw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vshrw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _shrw_rkr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vshrw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshvluw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshvlw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshvruw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshvrw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _smpyhw_rrr (int32_t src1, int32_t src2, int64_t &dst_result, fp_excep_t &fsr);
void _vsmpyhw_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _vsmpyr1hh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsmpyr1ww_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vsmpyr17ww_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsmpyrsuhh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsmpyruhh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsmpyww_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vspackdw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vspackhb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vspackudw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vspackuhb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vspackuwh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vspackwh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vspdph_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vspdpl_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vsphp_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vspint_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vspinth_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vspinthpk_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vsptrunc_vv (vreg_t src1, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vsshlrdw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsshlrdw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsshlrhb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsshlrhb_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsshlrwh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsshlrwh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsshlsurdw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsshlsurdw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsshlsurhb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsshlsurhb_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsshlsurwh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsshlsurwh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsshlsuh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsshlsuh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsshlsuw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsshlsuw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsshlurdw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsshlurdw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsshlurhb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsshlurhb_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsshlurwh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsshlurwh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsshluh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsshluh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsshluw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsshluw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsshlh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsshlh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsshlw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vsshlw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vsshvlw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vsshvrw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vssubb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vssubb_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vssubh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vssubh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vssubw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vssubw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result, fp_excep_t &fsr);
void _vsubabsb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsubabsd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsubabsh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsubabsw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsubcw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsubrb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsubrb_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _subrd_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _vsubrd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _subrd_dkd (int64_t src1, int32_t src2, int64_t &dst_result);
void _vsubrd_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsubrh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsubrh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _subrw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vsubrw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _subrw_rkr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vsubrw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsubb_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsubb_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _subd_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _vsubd_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsubd_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsubh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsubh_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _subw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vsubw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsubw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _subdp_ddd (int64_t src1, int64_t src2, int64_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vsubdp_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _subsp_rrr (int32_t src1, int32_t src2, int64_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vsubsp_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result, fp_ctrl_t fpcr, fp_excep_t &fsr);
void _vunpkhub_vv (vreg_t src1, vreg_t &dst_result);
void _unpkhuh_dd (int64_t src1, int64_t &dst_result);
void _vunpkhuh_vv (vreg_t src1, vreg_t &dst_result);
void _vunpkhb_vv (vreg_t src1, vreg_t &dst_result);
void _unpkhh_dd (int64_t src1, int64_t &dst_result);
void _vunpkhh_vv (vreg_t src1, vreg_t &dst_result);
void _vunpklub_vv (vreg_t src1, vreg_t &dst_result);
void _unpkluh_dd (int64_t src1, int64_t &dst_result);
void _vunpkluh_vv (vreg_t src1, vreg_t &dst_result);
void _vunpkluw_vv (vreg_t src1, vreg_t &dst_result);
void _vunpklb_vv (vreg_t src1, vreg_t &dst_result);
void _unpklh_dd (int64_t src1, int64_t &dst_result);
void _vunpklh_vv (vreg_t src1, vreg_t &dst_result);
void _vunpklw_vv (vreg_t src1, vreg_t &dst_result);
void _vunpkub_vv (vreg_t src1, vreg_t &dst_result);
void _vunpkb_vv (vreg_t src1, vreg_t &dst_result);
void _vaddcb_pvv (vpred_t src1, vreg_t src2, vreg_t &src3);
void _vaddcd_pvv (vpred_t src1, vreg_t src2, vreg_t &src3);
void _vaddch_pvv (vpred_t src1, vreg_t src2, vreg_t &src3);
void _vaddcw_pvv (vpred_t src1, vreg_t src2, vreg_t &src3);
void _vbpackh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vbpackl_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vbunpkd_vv (vreg_t src1, vreg_t &dst_result);
void _vbunpkdu_vv (vreg_t src1, vreg_t &dst_result);
void _vbunpkh_vv (vreg_t src1, vreg_t &dst_result);
void _vbunpkhh_vv (vreg_t src1, vreg_t &dst_result);
void _vbunpkhl_vv (vreg_t src1, vreg_t &dst_result);
void _vbunpkhu_vv (vreg_t src1, vreg_t &dst_result);
void _vbunpkuhh_vv (vreg_t src1, vreg_t &dst_result);
void _vbunpkuhl_vv (vreg_t src1, vreg_t &dst_result);
void _vbunpkw_vv (vreg_t src1, vreg_t &dst_result);
void _vbunpkwu_vv (vreg_t src1, vreg_t &dst_result);
void _vcdotpm2opn16b32h_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vcdotpm2opn1h32h_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vcdotpm2opn8h16w_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vcdotpm2opn8w16w_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vcdotpm32opn16b32h_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vdeal2b_vv (vreg_t src1, vreg_t &dst_result);
void _vdeal2h_vv (vreg_t src1, vreg_t &dst_result);
void _vdeal2w_vv (vreg_t src1, vreg_t &dst_result);
void _vdeal4b_vv (vreg_t src1, vreg_t &dst_result);
void _vdeal4h_vv (vreg_t src1, vreg_t &dst_result);
void _vdotpmpn16b32h_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vdotpmpn16h16w_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vdotpmpn16w8d_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vdotpmpn32b16h_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vdotpmpn32b16w_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vdotpmpn32h8w_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vdotpmpnu16h16w_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vdotpmpnu16w8d_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vdotpmpnu32b16h_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vdotpmpnu32b16w_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vdotpmpnu32h8w_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vdpackh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vdpackl_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vdsad16ou8h8w_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vdsad8ou16b16h_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vdsadm16ou8h8w_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vdsadm8ou16b16h_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vdsortdd16h_vv (vreg_t src1, vreg_t &dst_result);
void _vdsortddu16h_vv (vreg_t src1, vreg_t &dst_result);
void _vdsortdi16h_vv (vreg_t src1, vreg_t &dst_result);
void _vdsortdiu16h_vv (vreg_t src1, vreg_t &dst_result);
void _vdsortid16h_vv (vreg_t src1, vreg_t &dst_result);
void _vdsortidu16h_vv (vreg_t src1, vreg_t &dst_result);
void _vdsortii16h_vv (vreg_t src1, vreg_t &dst_result);
void _vdsortiiu16h_vv (vreg_t src1, vreg_t &dst_result);
void _vdsortpdd16h_vv (vreg_t src1, vreg_t &dst_result);
void _vdsortpddu16h_vv (vreg_t src1, vreg_t &dst_result);
void _vdsortpdi16h_vv (vreg_t src1, vreg_t &dst_result);
void _vdsortpdiu16h_vv (vreg_t src1, vreg_t &dst_result);
void _vdsortpid16h_vv (vreg_t src1, vreg_t &dst_result);
void _vdsortpidu16h_vv (vreg_t src1, vreg_t &dst_result);
void _vdsortpii16h_vv (vreg_t src1, vreg_t &dst_result);
void _vdsortpiiu16h_vv (vreg_t src1, vreg_t &dst_result);
void _vdunpkqh_vv (vreg_t src1, vreg_t &dst_result);
void _vdunpkql_vv (vreg_t src1, vreg_t &dst_result);
void _vdunpkuqh_vv (vreg_t src1, vreg_t &dst_result);
void _vdunpkuql_vv (vreg_t src1, vreg_t &dst_result);
void _vdup16b_vv (vreg_t src1, vreg_t &dst_result);
void _vdup16h_vv (vreg_t src1, vreg_t &dst_result);
void _vdup2b_vv (vreg_t src1, vreg_t &dst_result);
void _vdup2d_vv (vreg_t src1, vreg_t &dst_result);
void _vdup2h_vv (vreg_t src1, vreg_t &dst_result);
void _vdup2w_vv (vreg_t src1, vreg_t &dst_result);
void _vdup32b_vv (vreg_t src1, vreg_t &dst_result);
void _vdup4b_vv (vreg_t src1, vreg_t &dst_result);
void _vdup4d_vv (vreg_t src1, vreg_t &dst_result);
void _vdup4h_vv (vreg_t src1, vreg_t &dst_result);
void _vdup4w_vv (vreg_t src1, vreg_t &dst_result);
void _vdup8b_vv (vreg_t src1, vreg_t &dst_result);
void _vdup8h_vv (vreg_t src1, vreg_t &dst_result);
void _vdup8w_vv (vreg_t src1, vreg_t &dst_result);
void _vdupb_rv (int32_t src1, vreg_t &dst_result);
void _vdupb_kv (int32_t src1, vreg_t &dst_result);
void _vdupd_dv (int64_t src1, vreg_t &dst_result);
void _vduph_rv (int32_t src1, vreg_t &dst_result);
void _vduph_kv (int32_t src1, vreg_t &dst_result);
void _vdupw_rv (int32_t src1, vreg_t &dst_result);
void _vdupw_kv (int32_t src1, vreg_t &dst_result);
void _vfir4ds2hw_vww (vreg_t src1, wreg_t src2, wreg_t &dst_result);
void _vfir4ds2suhw_vww (vreg_t src1, wreg_t src2, wreg_t &dst_result);
void _vfir4ds2uhw_vww (vreg_t src1, wreg_t src2, wreg_t &dst_result);
void _vfir4hw_vww (vreg_t src1, wreg_t src2, wreg_t &dst_result);
void _vfir4suhw_vww (vreg_t src1, wreg_t src2, wreg_t &dst_result);
void _vfir4uhw_vww (vreg_t src1, wreg_t src2, wreg_t &dst_result);
void _vfir8ds2hd_www (wreg_t src1, wreg_t src2, wreg_t &dst_result);
void _vfir8ds2hw_wwv (wreg_t src1, wreg_t src2, vreg_t &dst_result);
void _vfir8ds2suhd_www (wreg_t src1, wreg_t src2, wreg_t &dst_result);
void _vfir8ds2suhw_wwv (wreg_t src1, wreg_t src2, vreg_t &dst_result);
void _vfir8ds2uhd_www (wreg_t src1, wreg_t src2, wreg_t &dst_result);
void _vfir8ds2uhw_wwv (wreg_t src1, wreg_t src2, vreg_t &dst_result);
void _vfir8ds4hd_www (wreg_t src1, wreg_t src2, wreg_t &dst_result);
void _vfir8ds4hw_wwv (wreg_t src1, wreg_t src2, vreg_t &dst_result);
void _vfir8ds4suhd_www (wreg_t src1, wreg_t src2, wreg_t &dst_result);
void _vfir8ds4suhw_wwv (wreg_t src1, wreg_t src2, vreg_t &dst_result);
void _vfir8ds4uhd_www (wreg_t src1, wreg_t src2, wreg_t &dst_result);
void _vfir8ds4uhw_wwv (wreg_t src1, wreg_t src2, vreg_t &dst_result);
void _vfir8hd_wvw (wreg_t src1, vreg_t src2, wreg_t &dst_result);
void _vfir8hw_wvv (wreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vfir8suhd_wvw (wreg_t src1, vreg_t src2, wreg_t &dst_result);
void _vfir8suhw_wvv (wreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vfir8uhd_wvw (wreg_t src1, vreg_t src2, wreg_t &dst_result);
void _vfir8uhw_wvv (wreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vgatherb_pvv (vpred_t src1, vreg_t src2, vreg_t &dst_result);
void _vgathernb_pvv (vpred_t src1, vreg_t src2, vreg_t &dst_result);
void _vgetb_vrd (vreg_t src1, int32_t src2, int64_t &dst_result);
void _vgetb_vkd (vreg_t src1, int32_t src2, int64_t &dst_result);
void _vgetd_vrd (vreg_t src1, int32_t src2, int64_t &dst_result);
void _vgetdupb_vrv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vgetdupd_vrv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vgetduph_vrv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vgetdupw_vrv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vgetd_vkd (vreg_t src1, int32_t src2, int64_t &dst_result);
void _vgeth_vrd (vreg_t src1, int32_t src2, int64_t &dst_result);
void _vgeth_vkd (vreg_t src1, int32_t src2, int64_t &dst_result);
void _vgetub_vrd (vreg_t src1, int32_t src2, int64_t &dst_result);
void _vgetub_vkd (vreg_t src1, int32_t src2, int64_t &dst_result);
void _vgetuh_vrd (vreg_t src1, int32_t src2, int64_t &dst_result);
void _vgetuh_vkd (vreg_t src1, int32_t src2, int64_t &dst_result);
void _vgetuw_vrd (vreg_t src1, int32_t src2, int64_t &dst_result);
void _vgetuw_vkd (vreg_t src1, int32_t src2, int64_t &dst_result);
void _vgetw_vrd (vreg_t src1, int32_t src2, int64_t &dst_result);
void _vgetw_vkd (vreg_t src1, int32_t src2, int64_t &dst_result);
void _vhaddeo16h2w_vd (vreg_t src1, int64_t &dst_result);
void _vhaddeo8w2d_vv (vreg_t src1, vreg_t &dst_result);
void _vhaddeo8w4d_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vhaddueo16h2w_vd (vreg_t src1, int64_t &dst_result);
void _vhaddueo8w2d_vv (vreg_t src1, vreg_t &dst_result);
void _vhaddueo8w4d_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vhhmv_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vhlmv_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vhpackh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vhpackl_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vhunpkd_vv (vreg_t src1, vreg_t &dst_result);
void _vhunpkdu_vv (vreg_t src1, vreg_t &dst_result);
void _vhunpkuwh_vv (vreg_t src1, vreg_t &dst_result);
void _vhunpkuwl_vv (vreg_t src1, vreg_t &dst_result);
void _vhunpkw_vv (vreg_t src1, vreg_t &dst_result);
void _vhunpkwh_vv (vreg_t src1, vreg_t &dst_result);
void _vhunpkwl_vv (vreg_t src1, vreg_t &dst_result);
void _vhunpkwu_vv (vreg_t src1, vreg_t &dst_result);
void _vlhmv_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vllmv_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vmatmpyhd_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _vmatmpyhw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vmatmpysuhd_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _vmatmpysuhw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vmatmpyuhd_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _vmatmpyuhw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vmatmpyushd_vvw (vreg_t src1, vreg_t src2, wreg_t &dst_result);
void _vmatmpyushw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vperm_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vpermeeb_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vpermeob_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vpermoob_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vpermeed_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vpermeod_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vpermood_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vpermeeh_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vpermeoh_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vpermooh_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vpermeeq_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vpermeoq_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vpermooq_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vpermeew_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vpermeow_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vpermoow_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vperm_yvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vpermhh_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vpermlh_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vpermll_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vppackdup16w_pv (vpred_t src1, vreg_t &dst_result);
void _vppackdup8w_pv (vpred_t src1, vreg_t &dst_result);
void _vputb_rkv (int32_t src1, int32_t src2, vreg_t &src3);
void _vputd_dkv (int64_t src1, int32_t src2, vreg_t &src3);
void _vputh_rkv (int32_t src1, int32_t src2, vreg_t &src3);
void _vputw_rkv (int32_t src1, int32_t src2, vreg_t &src3);
void _vpxpnd_pv (vpred_t src1, vreg_t &dst_result);
void _vreverseb_vv (vreg_t src1, vreg_t &dst_result);
void _vreversed_vv (vreg_t src1, vreg_t &dst_result);
void _vreverseh_vv (vreg_t src1, vreg_t &dst_result);
void _vreversew_vv (vreg_t src1, vreg_t &dst_result);
void _vsad16ou16h16w_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsad16ou8h16w_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsad8ou16b32h_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vsadm16ou16h16w_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vsadm16ou8h16w_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vsadm8ou16b32h_yvvv (vreg_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vscatterb_pvv (vpred_t src1, vreg_t src2, vreg_t &dst_result);
void _vscatternb_pvv (vpred_t src1, vreg_t src2, vreg_t &dst_result);
void _vsel_pvv (vpred_t src1, vreg_t src2, vreg_t &src3);
void _vsel_pkv (vpred_t src1, int32_t src2, vreg_t &src3);
void _vsel_pvkv (vpred_t src1, vreg_t src2, int32_t src3, vreg_t &dst_result);
void _vsel_pvvv (vpred_t src1, vreg_t src2, vreg_t src3, vreg_t &dst_result);
void _vshfl2b_vv (vreg_t src1, vreg_t &dst_result);
void _vshfl2d_vv (vreg_t src1, vreg_t &dst_result);
void _vshfl2dee_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshfl2deo_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshfl2dhh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshfl2dlh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshfl2dll_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshfl2doo_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshfl2h_vv (vreg_t src1, vreg_t &dst_result);
void _vshfl2hhh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshfl2hll_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshfl2w_vv (vreg_t src1, vreg_t &dst_result);
void _vshfl2whh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshfl2wll_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshfl4b_vv (vreg_t src1, vreg_t &dst_result);
void _vshfl4d_vv (vreg_t src1, vreg_t &dst_result);
void _vshfl4h_vv (vreg_t src1, vreg_t &dst_result);
void _vshfl4w_vv (vreg_t src1, vreg_t &dst_result);
void _vshl_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshlcb_pvv (vpred_t src1, vreg_t src2, vreg_t &src3);
void _vshlch_pvv (vpred_t src1, vreg_t src2, vreg_t &src3);
void _vshlcw_pvv (vpred_t src1, vreg_t src2, vreg_t &src3);
void _vshlm16b_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshlm1b_vrv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshlm2b_vrv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshlm4b_vrv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshlm8b_vdv (vreg_t src1, int64_t src2, vreg_t &dst_result);
void _vshl_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshr_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshrm16b_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshrm1b_vrv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshrm2b_vrv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshrm4b_vrv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshrm8b_vdv (vreg_t src1, int64_t src2, vreg_t &dst_result);
void _vshru_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vshru_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vshr_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _vsortd16sp_vv (vreg_t src1, vreg_t &dst_result);
void _vsortd16w_vv (vreg_t src1, vreg_t &dst_result);
void _vsortdu16w_vv (vreg_t src1, vreg_t &dst_result);
void _vsorti16sp_vv (vreg_t src1, vreg_t &dst_result);
void _vsorti16w_vv (vreg_t src1, vreg_t &dst_result);
void _vsortiu16w_vv (vreg_t src1, vreg_t &dst_result);
void _vsortpd16sp_vv (vreg_t src1, vreg_t &dst_result);
void _vsortpd16w_vv (vreg_t src1, vreg_t &dst_result);
void _vsortpdu16w_vv (vreg_t src1, vreg_t &dst_result);
void _vsortpi16sp_vv (vreg_t src1, vreg_t &dst_result);
void _vsortpi16w_vv (vreg_t src1, vreg_t &dst_result);
void _vsortpiu16w_vv (vreg_t src1, vreg_t &dst_result);
void _vswapb_vv (vreg_t src1, vreg_t &dst_result);
void _vswapd_vv (vreg_t src1, vreg_t &dst_result);
void _vswaph_vv (vreg_t src1, vreg_t &dst_result);
void _vswapw_vv (vreg_t src1, vreg_t &dst_result);
void _vwpackh_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vwpackl_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vwunpkd_vv (vreg_t src1, vreg_t &dst_result);
void _vwunpkdh_vv (vreg_t src1, vreg_t &dst_result);
void _vwunpkdl_vv (vreg_t src1, vreg_t &dst_result);
void _vwunpkdu_vv (vreg_t src1, vreg_t &dst_result);
void _vwunpkudh_vv (vreg_t src1, vreg_t &dst_result);
void _vwunpkudl_vv (vreg_t src1, vreg_t &dst_result);
void _xnorw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _xnord_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _vxnorw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _xnord_dkd (int64_t src1, int32_t src2, int64_t &dst_result);
void _xnor_ppp (vpred_t src1, vpred_t src2, vpred_t &dst_result);
void _xorw_rrr (int32_t src1, int32_t src2, int64_t &dst_result);
void _xord_ddd (int64_t src1, int64_t src2, int64_t &dst_result);
void _vxorw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _vxormpyw_vvv (vreg_t src1, vreg_t src2, vreg_t &dst_result);
void _xord_dkd (int64_t src1, int32_t src2, int64_t &dst_result);
void _xorw_rkr (int32_t src1, int32_t src2, int64_t &dst_result);
void _vxorw_vkv (vreg_t src1, int32_t src2, vreg_t &dst_result);
void _xor_ppp (vpred_t src1, vpred_t src2, vpred_t &dst_result);
void _xpnd8b_rd (int32_t src1, int64_t &dst_result);
void _xpnd4h_rd (int32_t src1, int64_t &dst_result);

// Helper function type definitions 
word abs_b(word a);
int64_t abs_d(int64_t a);
uint64_t abs_dp(const uint64_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
word abs_h(word a);
uint32_t abs_sp(const uint32_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
word abs_w(word a);
uint32_t addu_b(uint32_t op1, uint32_t op2);
uint32_t addu_h(uint32_t op1, uint32_t op2);
int32_t add_b(int32_t op1, int32_t op2);
uint64_t add_dp(const uint64_t op1, const uint64_t  op2, fp_excep_t&    fpe, const fp_ctrl_t fc);
int32_t add_h(int32_t op1, int32_t op2);
uint32_t add_sp(const uint32_t op1, const uint32_t  op2, fp_excep_t&    fpe, const fp_ctrl_t fc);
int32_t apys_b(int32_t op1, int32_t op2);
int64_t apys_d(int64_t op1, int64_t op2);
int32_t apys_h(int32_t op1, int32_t op2);
int32_t apys_w(int32_t op1, int32_t op2);
word avgu_b(word a, word b, word rounding);
word avgu_h(word a, word b, word rounding);
word avg_b(word a, word b, word rounding);
word avg_h(word a, word b, word rounding);
uint32_t binlog_w(uint32_t x);
word bitcnt_b(uword a);
uint32_t bitcnt_d(uint64_t op);
uint32_t bitcnt_h(uint32_t op);
uint32_t bitcnt_w(uint32_t op);
int64_t bitdeal_d(int64_t a);
int64_t bitr_d(int64_t a);
word bit_reverse(word a);
template <typename T> T bit_shfl(T a);
uint64_t bit_transpose_8x8(uint64_t src);
word carry_out(word op1, word op2);
qword ccdotp2hd(dword op1, dword op2);
dword ccdotp2hw(dword op1, dword op2);
word ccdotp2r1hh(dword op1, dword op2, fp_excep_t &fpe);
dword ccdotp4hw(qword op1, qword op2, fp_excep_t &fpe);
dword ccmatmpyr1_hh(dword op1, qword op2, fp_excep_t &fpe);
qword ccmatmpy_hw(dword op1, qword op2, fp_excep_t &fpe);
word ccmpyr1_hh(word a, word b, fp_excep_t &fpe);
dword ccmpyr1_ww(dword op1, dword op2, fp_excep_t &fpe);
two_longlong ccmpy_cgem075(word a, word b);
dword ccmpy_hw(word a, word b, fp_excep_t &fpe);
qword cdotp2hd(dword op1, dword op2);
dword cdotp2hw(dword op1, dword op2);
word cdotp2r1hh(dword op1, dword op2, fp_excep_t &fpe);
dword cdotp4hw(qword op1, qword op2, fp_excep_t &fpe);
uint32_t circular_cmpgt_b(uint32_t op1, uint32_t op2);
uint32_t circular_cmpgt_h(uint32_t op1, uint32_t op2);
uint32_t class_dp(const uint64_t dp);
uint32_t class_sp(const uint32_t sp);
dword cmatmpyr1_hh(dword op1, qword op2, fp_excep_t &fpe);
qword cmatmpy_hw(dword op1, qword op2, fp_excep_t &fpe);
uint32_t cmax_b(uint32_t op1, uint32_t op2);
uint32_t cmax_h(uint32_t op1, uint32_t op2);
word cmpeq_b(word a, word b);
bool cmpeq_dp(const uint64_t op1, const uint64_t  op2, fp_excep_t&    fpe, const fp_ctrl_t fc);
word cmpeq_h(word a, word b);
bool cmpeq_sp(const uint32_t op1, const uint32_t  op2, fp_excep_t&    fpe, const fp_ctrl_t fc);
uword cmpgeu_b(uword a, uword b);
uword cmpgeu_h(uword a, uword b);
word cmpge_b(word a, word b);
word cmpge_h(word a, word b);
uword cmpgtu_b(uword a, uword b);
uword cmpgtu_h(uword a, uword b);
word cmpgt_b(word a, word b);
word cmpgt_h(word a, word b);
bool cmple_dp(const uint64_t op1, const uint64_t  op2, fp_excep_t&    fpe, const fp_ctrl_t fc);
bool cmple_sp(const uint32_t op1, const uint32_t  op2, fp_excep_t&    fpe, const fp_ctrl_t fc);
uword cmpltu_b(uword a, uword b);
uword cmpltu_h(uword a, uword b);
word cmplt_b(word a, word b);
bool cmplt_dp(const uint64_t op1, const uint64_t  op2, fp_excep_t&    fpe, const fp_ctrl_t fc);
word cmplt_h(word a, word b);
bool cmplt_sp(const uint32_t op1, const uint32_t  op2, fp_excep_t&    fpe, const fp_ctrl_t fc);
word cmpyr1_hh(word a, word b, fp_excep_t &fpe);
dword cmpyr1_ww(dword op1, dword op2, fp_excep_t &fpe);
word cmpyr_hh(word a, word b, fp_excep_t &fpe);
two_longlong cmpy_cgem075(word a, word b);
dword cmpy_hw(word a, word b, fp_excep_t &fpe);
word crot270_h(word op1);
dword crot270_sp(dword op1);
dword crot270_w(dword op1);
word crot90_h(word op1);
dword crot90_sp(dword op1);
dword crot90_w(dword op1);
word ddotph2r_joule(dword a, word b, fp_excep_t &fpe);
dword ddotph2_joule(dword a, word b, fp_excep_t &fpe);
word ddotpl2r_joule(dword a, word b, fp_excep_t &fpe);
dword ddotpl2_joule(dword a, word b, fp_excep_t &fpe);
word deal(word a);
template <uint32_t SIZE> vreg<SIZE> deal2(vreg<SIZE> op, data_size type);
template <uint32_t SIZE> vreg<SIZE> deal4(vreg<SIZE> op, data_size type);
int64_t dotp2nx_wd(int64_t op1, int64_t op2);
int64_t dotp2n_wd(int64_t op1, int64_t op2);
int32_t dotp2su_bh(int32_t op1, int32_t op2);
int64_t dotp2su_hd(int32_t op1, uint32_t op2);
word dotp2su_hw(word op1, word op2);
int32_t dotp2u_bh(int32_t op1, int32_t op2);
uint64_t dotp2u_hd(uint32_t op1, uint32_t op2);
word dotp2u_hw(word op1, word op2);
int64_t dotp2x_wd(int64_t op1, int64_t op2);
int32_t dotp2_bh(int32_t op1, int32_t op2);
int64_t dotp2_hd(int32_t op1, int32_t op2);
word dotp2_hw(word op1, word op2);
int64_t dotp2_wd(int64_t op1, int64_t op2);
dword dotp4su_hd(dword dwop1, dword dwop2);
word dotp4su_hw(dword dwop1, dword dwop2, fp_excep_t &fpe);
dword dotp4u_hd(dword dwop1, dword dwop2);
uword dotp4u_hw(dword dwop1, dword dwop2, fp_excep_t &fpe);
dword dotp4_hd(dword dwop1, dword dwop2);
word dotp4_hw(dword dwop1, dword dwop2, fp_excep_t &fpe);
word dotpn2(word op1,word op2);
word dotpnrsu_joule(word a, word b);
word dotprsu_joule(word a, word b);
uint16_t dphp(const uint64_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
int32_t dpint(const uint64_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
uint32_t dpsp(const uint64_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
int32_t dptrunc(const uint64_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
template <uint32_t SIZE> vreg<SIZE> dup(vreg<SIZE> op, data_size type);
word dupb(word op);
word duph(word op);
template <uint32_t SIZE> vreg<SIZE> dupx_elements(vreg<SIZE> op, data_size type, uint32_t dup_count);
template <uint32_t SIZE> vreg<SIZE> dup_k(int64_t op, data_size type);
word expand_b(word a);
uint64_t expand_bits(uint64_t op, int num_bits_per_bit);
word expand_h(word a);
word extract_sign(word op);
word gmpy(uword op1, uword op2, unsigned int size, unsigned int polynomial);
word gmpy_b(word op1, word op2, uint64_t gfpgfr_poly);
word gmpy_w(uword a, uword b, uint64_t gply_poly);
template <typename T> T gsat(T op, uint32_t num_bits);
template <typename T> T gsatsu(T op, uint32_t num_bits);
template <typename T> T gsatu(T op, uint32_t num_bits);
int32_t hpint(const uint16_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
uint32_t hpsp(const uint32_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
template <typename T> void insertsort(T a[], uint32_t in[]);
template <typename T> void insertsort_16sp(T a[], uint32_t in[]);
template <typename T> void insertsort_desc(T a[], uint32_t in[]);
template <typename T> void insertsort_desc_16sp(T a[], uint32_t in[]);
uint64_t intdp(const int32_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
uint64_t intdpu(const uint32_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
uint16_t inthp(const int32_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
uint16_t inthpu(const uint32_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
uint32_t intsp(const int32_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
uint32_t intspu(const uint32_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
int32_t int_round(uint64_t frac, const bool sign, fp_excep_t& fpe, const fp_ctrl_t fc);
int16_t int_round_h(uint64_t frac, const bool sign, fp_excep_t& fpe, const fp_ctrl_t fc);
word landn_b(word op1, word op2);
word landn_h(word op1, word op2);
word land_b(word op1, word op2);
word land_h(word op1, word op2);
word Lmask(word a);
int32_t lmbd_b(int32_t a, int32_t b);
int32_t lmbd_d(int32_t a, int64_t b);
int32_t lmbd_h(int32_t a, int32_t b);
word lmbd_w(word a, word b);
word lor_b(word op1, word op2);
word lor_h(word op1, word op2);
uint32_t maxu_b(uint32_t op1, uint32_t op2);
uint32_t maxu_h(uint32_t op1, uint32_t op2);
int32_t max_b(int32_t op1, int32_t op2);
uint64_t max_dp(const uint64_t dp1, const uint64_t dp2, fp_excep_t& fpe);
int32_t max_h(int32_t op1, int32_t op2);
uint32_t max_sp(const uint32_t sp1, const uint32_t sp2, fp_excep_t& fpe);
uint32_t minu_b(uint32_t op1, uint32_t op2);
uint32_t minu_h(uint32_t op1, uint32_t op2);
int32_t min_b(int32_t op1, int32_t op2);
uint64_t min_dp(const uint64_t dp1, const uint64_t dp2, fp_excep_t& fpe);
int32_t min_h(int32_t op1, int32_t op2);
uint32_t min_sp(const uint32_t sp1, const uint32_t sp2, fp_excep_t& fpe);
word mpy16x32ss(word a, word b);
word mpy16x32ssh(word a, word b);
dword mpy2ir_joule(word a, word b, fp_excep_t &fpe);
dword mpy32_joule(word a, word b);
dword mpyid(word op1, word op2);
uint64_t mpy_dp(const uint64_t op1, const uint64_t  op2, fp_excep_t&    fpe, const fp_ctrl_t fc);
uint128_t mpy_dq(const uint64_t op1, const uint64_t op2);
uint32_t mpy_sp(const uint32_t op1, const uint32_t  op2, fp_excep_t&    fpe, const fp_ctrl_t fc);
uint64_t mpy_sp2dp(const uint32_t op1, const uint32_t  op2, fp_excep_t&    fpe, const fp_ctrl_t fc);
template <typename T> T mv_pred_reg(T pred, uint32_t shft);
word norm2u_h(word op1);
dword norm2u_w(dword op1);
uint64_t pack_dp(unpack_dp_t udp, fp_excep_t& fpe, const fp_ctrl_t fc);
uint16_t pack_hp(unpack_hp_t uhp, fp_excep_t& fpe, const fp_ctrl_t fc);
uint32_t pack_sp(unpack_sp_t usp, fp_excep_t& fpe, const fp_ctrl_t fc);
uint32_t pbitcnt(uint32_t op);
uint32_t pbitcnt(uint64_t op);
uint64_t pbitr(uint64_t a);
uint64_t pdeal2b(uint64_t a);
vpred_t pdecimateb(vpred_t a, vpred_t b);
vpred_t pdecimated(vpred_t a, vpred_t b);
vpred_t pdecimateh(vpred_t a, vpred_t b);
vpred_t pdecimatew(vpred_t a, vpred_t b);
template <uint32_t SIZE> vreg<SIZE> perm(vreg<SIZE> op1, vreg<SIZE> op2);
vpred_t pexpandb(vpred_t a);
vpred_t pexpandd(vpred_t a);
vpred_t pexpandh(vpred_t a);
vpred_t pexpandw(vpred_t a);
uint32_t pmask(uint32_t op);
vpred_t pmask(vpred_t op, uint32_t num_bits_elem);
int16_t pnImpyb(int8_t mask, int8_t pn, int8_t Q, int8_t I);
int32_t pnImpyh(int8_t mask, int8_t pn, int16_t Q, int16_t I);
int64_t pnImpyw(int8_t mask, int8_t pn, int32_t Q, int32_t I);
int16_t pnQmpyb(int8_t mask, int8_t pn, int8_t Q, int8_t I);
int32_t pnQmpyh(int8_t mask, int8_t pn, int16_t Q, int16_t I);
int64_t pnQmpyw(int8_t mask, int8_t pn, int32_t Q, int32_t I);
template <typename T> uint32_t prmbd_b(T op);
template <typename T> uint32_t prmbd_d(T op);
template <typename T> uint32_t prmbd_h(T op);
template <typename T> uint32_t prmbd_w(T op);
uint64_t pshfl2b(uint64_t a);
uint64_t rcpsq_dp(const uint64_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
uint32_t rcpsq_sp(const uint32_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
uint32_t rcpsq_tbl(uint32_t index);
uint64_t rcp_dp(const uint64_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
uint32_t rcp_sp(const uint32_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
uint32_t rcp_tbl(uint32_t index);
inline uint64_t renorm_dp(uint64_t dp, int16_t& exp);
inline uint32_t renorm_hp(uint32_t hp, int16_t& exp);
inline uint32_t renorm_sp(uint32_t sp, int16_t& exp);
template <uint32_t SIZE> vreg<SIZE> reverse(vreg<SIZE> op, data_size type);
word Rmask(word a);
word rotl_b(word a, uword l);
int64_t rotl_d(int64_t a, uint32_t l);
word rotl_h(word a, uword l);
word rotl_w(word a, uword l);
word rpackh(word a, word b, fp_excep_t &fpe);
dword saddsub_w(word a, word b, fp_excep_t &fpe);
uint32_t saddus_b(uint32_t op1, int32_t op2);
word saddus_h(word a, word b);
uint32_t saddus_w(uint32_t op1, int32_t op2);
word saddu_b(word a, word b);
uint32_t saddu_h(uint32_t op1, uint32_t op2);
uint32_t saddu_w(uint32_t op1, uint32_t op2);
word sadd_b(word op1, word op2);
int32_t sadd_b_k(int32_t op1, int32_t op2);
word sadd_h(word a, word b);
int32_t sadd_h_k(int32_t op1, int32_t op2);
word sadd_w(word a, word b, fp_excep_t &fpe);
word sat(dword a, fp_excep_t &fpe);
uint32_t satsu_dw(int64_t a);
uint32_t satu_dw(uint64_t a);
uint32_t satu_wh(uint32_t op1);
word sat_check32(long long a);
int64_t sat_dl(int64_t a);
int32_t sat_hb(int32_t op1);
word sat_jz(long long a);
int32_t sat_wh(int32_t op1);
word sbyte(word op1, uword byte_num);
word sbyte0(word src);
word sbyte1(word src);
word sbyte2(word src);
word sbyte3(word src);
uint64_t scale_dp(const uint64_t op1, const int op2, fp_excep_t& fpe, const fp_ctrl_t fc);
uint32_t scale_sp(const uint32_t op1, const int op2, fp_excep_t& fpe, const fp_ctrl_t fc);
template <uint32_t SIZE> vreg<SIZE> shfl2(vreg<SIZE> op, data_size type);
dword shfl3(word a, word b);
template <uint32_t SIZE> vreg<SIZE> shfl4(vreg<SIZE> op, data_size type);
word shigh16(word src);
uint32_t shl_b(uint32_t op1, uint32_t op2);
uint64_t shl_d(uint64_t op1, uint32_t op2);
uword shl_h(uword op1, uword op2);
uword shl_w(uword a, uword l);
int32_t shrr_b(int32_t a, uint32_t r);
int64_t shrr_d(int64_t a, uint32_t r);
int32_t shrr_h(int32_t a, uint32_t r);
int32_t shrr_w(int32_t a, uint32_t r);
uint32_t shrur_b(uint32_t a, uint32_t r);
uint64_t shrur_d(uint64_t a, uint32_t r);
uint32_t shrur_h(uint32_t a, uint32_t r);
uint32_t shrur_w(uint32_t a, uint32_t r);
uword shru_b(uword a, uword r);
uint64_t shru_d(uint64_t op1, uint32_t op2);
uword shru_h(uword a, uword r);
uword shru_w(uword a, uword r);
word shr_b(word a, uword r);
int64_t shr_d(int64_t op1, uint32_t op2);
word shr_h(word a, uword r);
word shr_w(word a, uword r);
word shuffle(word a);
int64_t shuffle_d(int64_t a);
uint32_t shvlu_w(uint32_t a, int32_t r);
int32_t shvl_w(int32_t a, int32_t r);
uint32_t shvru_w(uint32_t a, int32_t r);
int32_t shvr_w(int32_t a, int32_t r);
word slow16(word src);
word smpyr1_hh(word op1, word op2);
word smpyr1_ww(word a, word b, fp_excep_t &fpe);
int32_t smpyr2_ww(int32_t a, int32_t b);
word smpyrsu_hh(word op1, word op2);
word smpyru_hh(word op1, word op2);
dword smpy_bh(word a, word b);
dword smpy_hw(word a, word b, fp_excep_t &fpe);
word smpy_ww(word a, word b, fp_excep_t &fpe);
word spack4(word a, word b);
dword smpy_hw16(word a, word b, fp_excep_t &fpe);
word spacku_hb(word a, word b);
word spacku_wh(word a, word b);
word spack_hb(word a, word b);
word spack_wh(word a, word b);
uint64_t spdp(const uint32_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
uint64_t spdp_nan(const uint32_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
uint16_t sphp(const uint32_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
int32_t spint(const uint32_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
int16_t spinth(const uint32_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
int32_t sptrunc(const uint32_t op1, fp_excep_t& fpe, const fp_ctrl_t fc);
int64_t sshlr_dw(int64_t a, uint32_t l);
int32_t sshlr_hb(int32_t a, uint32_t l);
int32_t sshlr_wh(int32_t a, uint32_t l);
uint64_t sshlsur_dw(int64_t a, uint32_t l);
uint32_t sshlsur_hb(int32_t a, uint32_t l);
uint32_t sshlsur_wh(int32_t a, uint32_t l);
uint64_t sshlsu_d(int64_t a, uint32_t shft);
word sshlsu_h(word a, uword l);
uword sshlsu_w(word a, uword l);
uint64_t sshlur_dw(uint64_t a, uint32_t l);
uint32_t sshlur_hb(uint32_t a, uint32_t l);
uint32_t sshlur_wh(uint32_t a, uint32_t l);
uint64_t sshlu_d(uint64_t a, uint32_t shft);
uint32_t sshlu_h(uint32_t a, uint32_t l);
uint32_t sshlu_w(uint32_t a, uint32_t l);
int64_t sshl_d(int64_t a, uint32_t shft);
word sshl_h(word a, uword l);
word sshl_w(word a, uword l, fp_excep_t &fpe);
word sshv(word a, word r, fp_excep_t &fpe);
int32_t ssub_b(int32_t op1, int32_t op2);
int32_t ssub_b_k(int32_t op1, int32_t op2);
word ssub_h(word a, word b);
int32_t ssub_h_k(int32_t op1, int32_t op2);
word ssub_w(word a, word b, fp_excep_t &fpe);
uint8_t subabs1b(uint8_t pixel, uint8_t ref);
uint16_t subabs1h(uint16_t pixel, uint16_t ref);
word subabs_b(word a, word b);
word subabs_h(word a, word b);
uint32_t subu_b(uint32_t op1, uint32_t op2);
uint32_t subu_h(uint32_t op1, uint32_t op2);
int32_t sub_b(int32_t op1, int32_t op2);
int32_t sub_b_k(int32_t op1, int32_t op2);
uint64_t sub_dp(const uint64_t op1, const uint64_t  op2, fp_excep_t&    fpe, const fp_ctrl_t fc);
int32_t sub_h(int32_t op1, int32_t op2);
int32_t sub_h_k(int32_t op1, int32_t op2);
uint32_t sub_sp(const uint32_t op1, const uint32_t  op2, fp_excep_t&    fpe, const fp_ctrl_t fc);
template <uint32_t SIZE> vreg<SIZE> swap(vreg<SIZE> op, data_size type);
uword ubyte(word op1, uword byte_num);
uword ubyte0(word src);
uword ubyte1(word src);
uword ubyte2(word src);
uword ubyte3(word src);
uword uhigh16(word src);
uword ulow16(word src);
unpack_dp_t unpack_dp(const uint64_t dp, fp_excep_t& fpe, const fp_ctrl_t fc);
unpack_hp_t unpack_hp(const uint16_t hp, fp_excep_t& fpe, const fp_ctrl_t fc);
unpack_sp_t unpack_sp(const uint32_t sp, fp_excep_t& fpe, const fp_ctrl_t fc);
vreg_t vcdotpm2opn16b32h(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vcdotpm2opn1h32h(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vcdotpm2opn8h16w(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vcdotpm2opn8w16w(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vcdotpm32opn16b32h(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vdotp2r1_bb(vreg_t op1, vreg_t op2);
vreg_t vdotp2r1_hh(vreg_t op1, vreg_t op2);
vreg_t vdotp2rsu_bb(vreg_t op1, vreg_t op2);
vreg_t vdotp2rsu_hh(vreg_t op1, vreg_t op2);
vreg_t vdotp2ru_bb(vreg_t op1, vreg_t op2);
vreg_t vdotp2ru_hh(vreg_t op1, vreg_t op2);
vreg_t vdotp8su_bw(vreg_t op1, vreg_t op2);
vreg_t vdotpmpn16b32h(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vdotpmpn16h16h(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vdotpmpn16h16w(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vdotpmpn16w8d(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vdotpmpn16w8w(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vdotpmpn32b16h(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vdotpmpn32b16w(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vdotpmpn32h8w(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vdotpmpn8w16w(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vdotpmpnu16h16w(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vdotpmpnu16w8d(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vdotpmpnu32b16h(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vdotpmpnu32b16w(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vdotpmpnu32h8w(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vdsad16o8h8w(vreg_t op1, vreg_t op2);
vreg_t vdsad8o16b16h(vreg_t op1, vreg_t op2);
vreg_t vdsadm16o8h8w(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vdsadm8o16b16h(vreg_t cr, vreg_t op1, vreg_t op2);
template <uint32_t SIZE> vreg<SIZE> vector_unpk(vreg<SIZE> op, data_size type);
template <uint32_t SIZE> vreg<SIZE> vector_unpku(vreg<SIZE> op, data_size type);
vreg_t vsad16o16h16w(vreg_t op1, vreg_t op2);
vreg_t vsad16o8h16w(vreg_t op1, vreg_t op2);
vreg_t vsad8o16b32h(vreg_t op1, vreg_t op2);
vreg_t vsadm16o16h16w(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vsadm16o8h16w(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vsadm8o16b32h(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vsdotpmpn16h16h(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vsdotpmpn16w8w(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vsdotpmpn32h8h(vreg_t cr, vreg_t op1, vreg_t op2);
vreg_t vsdotpmpn8w16w(vreg_t cr, vreg_t op1, vreg_t op2);
template <uint32_t SIZE> vreg<SIZE> vshlm(vreg<SIZE> op1, vreg<SIZE> op2, uint32_t num_bytes);
template <uint32_t SIZE> vreg<SIZE> vshrm(vreg<SIZE> op1, vreg<SIZE> op2, uint32_t num_bytes);
word xormpy_w(uword a, uword b);
int16_t _1pnImpyb(int8_t mask, int8_t pn, int8_t Q, int8_t I);
int32_t _1pnImpyh(int8_t mask, int8_t pn, int16_t Q, int16_t I);
int16_t _1pnImpyub(int8_t mask, int8_t pn, uint8_t Q, uint8_t I);
int32_t _1pnImpyuh(int8_t mask, int8_t pn, uint16_t Q, uint16_t I);
int64_t _1pnImpyuw(int8_t mask, int8_t pn, uint32_t Q, uint32_t I);
int64_t _1pnImpyw(int8_t mask, int8_t pn, int32_t Q, int32_t I);
int16_t _1pnQmpyb(int8_t mask, int8_t pn, int8_t Q, int8_t I);
int32_t _1pnQmpyh(int8_t mask, int8_t pn, int16_t Q, int16_t I);
int16_t _1pnQmpyub(int8_t mask, int8_t pn, uint8_t Q, uint8_t I);
int32_t _1pnQmpyuh(int8_t mask, int8_t pn, uint16_t Q, uint16_t I);
int64_t _1pnQmpyuw(int8_t mask, int8_t pn, uint32_t Q, uint32_t I);
int64_t _1pnQmpyw(int8_t mask, int8_t pn, int32_t Q, int32_t I);
// End of helper function type definitions 


